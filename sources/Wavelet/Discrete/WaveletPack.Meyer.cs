using UMapx.Core;

namespace UMapx.Wavelet
{
    /// <summary>
    /// Defines the discrete wavelet.
    /// </summary>
    /// <remarks>
    /// More information can be found on the website:
    /// https://en.wikipedia.org/wiki/Wavelet
    /// </remarks>
    public partial class WaveletPack
    {
        #region Meyer wavelet
        /// <summary>
        /// Returns the Meyer wavelet.
        /// </summary>
        public static WaveletPack Meyer
        {
            get
            {
                float[] lp = new float[] {
               0.000000000000000f,
              -0.000001509740857f,
               0.000001278766757f,
               0.000000449585560f,
              -0.000002096568870f,
               0.000001723223554f,
               0.000000698082276f,
              -0.000002879408033f,
               0.000002383148395f,
               0.000000982515602f,
              -0.000004217789186f,
               0.000003353501538f,
               0.000001674721859f,
              -0.000006034501342f,
               0.000004837555802f,
               0.000002402288023f,
              -0.000009556309846f,
               0.000007216527695f,
               0.000004849078300f,
              -0.000014206928581f,
               0.000010503914271f,
               0.000006187580298f,
              -0.000024438005846f,
               0.000020106387691f,
               0.000014993523600f,
              -0.000046428764284f,
               0.000032341311914f,
               0.000037409665760f,
              -0.000102779005085f,
               0.000024461956845f,
               0.000149713515389f,
              -0.000075592870255f,
              -0.000139913148217f,
              -0.000093512893880f,
               0.000161189819725f,
               0.000859500213762f,
              -0.000578185795273f,
              -0.002702168733939f,
               0.002194775336459f,
               0.006045510596456f,
              -0.006386728618548f,
              -0.011044641900539f,
               0.015250913158586f,
               0.017403888210177f,
              -0.032094063354505f,
              -0.024321783959519f,
               0.063667300884468f,
               0.030621243943425f,
              -0.132696615358862f,
              -0.035048287390595f,
               0.444095030766529f,
               0.743751004903787f,
               0.444095030766529f,
              -0.035048287390595f,
              -0.132696615358862f,
               0.030621243943425f,
               0.063667300884468f,
              -0.024321783959519f,
              -0.032094063354505f,
               0.017403888210177f,
               0.015250913158586f,
              -0.011044641900539f,
              -0.006386728618548f,
               0.006045510596456f,
               0.002194775336459f,
              -0.002702168733939f,
              -0.000578185795273f,
               0.000859500213762f,
               0.000161189819725f,
              -0.000093512893880f,
              -0.000139913148217f,
              -0.000075592870255f,
               0.000149713515389f,
               0.000024461956845f,
              -0.000102779005085f,
               0.000037409665760f,
               0.000032341311914f,
              -0.000046428764284f,
               0.000014993523600f,
               0.000020106387691f,
              -0.000024438005846f,
               0.000006187580298f,
               0.000010503914271f,
              -0.000014206928581f,
               0.000004849078300f,
               0.000007216527695f,
              -0.000009556309846f,
               0.000002402288023f,
               0.000004837555802f,
              -0.000006034501342f,
               0.000001674721859f,
               0.000003353501538f,
              -0.000004217789186f,
               0.000000982515602f,
               0.000002383148395f,
              -0.000002879408033f,
               0.000000698082276f,
               0.000001723223554f,
              -0.000002096568870f,
               0.000000449585560f,
               0.000001278766757f,
              -0.000001509740857f };
                float[] hp = new float[] {
               0.000001509740857f,
               0.000001278766757f,
              -0.000000449585560f,
              -0.000002096568870f,
              -0.000001723223554f,
               0.000000698082276f,
               0.000002879408033f,
               0.000002383148395f,
              -0.000000982515602f,
              -0.000004217789186f,
              -0.000003353501538f,
               0.000001674721859f,
               0.000006034501342f,
               0.000004837555802f,
              -0.000002402288023f,
              -0.000009556309846f,
              -0.000007216527695f,
               0.000004849078300f,
               0.000014206928581f,
               0.000010503914271f,
              -0.000006187580298f,
              -0.000024438005846f,
              -0.000020106387691f,
               0.000014993523600f,
               0.000046428764284f,
               0.000032341311914f,
              -0.000037409665760f,
              -0.000102779005085f,
              -0.000024461956845f,
               0.000149713515389f,
               0.000075592870255f,
              -0.000139913148217f,
               0.000093512893880f,
               0.000161189819725f,
              -0.000859500213762f,
              -0.000578185795273f,
               0.002702168733939f,
               0.002194775336459f,
              -0.006045510596456f,
              -0.006386728618548f,
               0.011044641900539f,
               0.015250913158586f,
              -0.017403888210177f,
              -0.032094063354505f,
               0.024321783959519f,
               0.063667300884468f,
              -0.030621243943425f,
              -0.132696615358862f,
               0.035048287390595f,
               0.444095030766529f,
              -0.743751004903787f,
               0.444095030766529f,
               0.035048287390595f,
              -0.132696615358862f,
              -0.030621243943425f,
               0.063667300884468f,
               0.024321783959519f,
              -0.032094063354505f,
              -0.017403888210177f,
               0.015250913158586f,
               0.011044641900539f,
              -0.006386728618548f,
              -0.006045510596456f,
               0.002194775336459f,
               0.002702168733939f,
              -0.000578185795273f,
              -0.000859500213762f,
               0.000161189819725f,
               0.000093512893880f,
              -0.000139913148217f,
               0.000075592870255f,
               0.000149713515389f,
              -0.000024461956845f,
              -0.000102779005085f,
              -0.000037409665760f,
               0.000032341311914f,
               0.000046428764284f,
               0.000014993523600f,
              -0.000020106387691f,
              -0.000024438005846f,
              -0.000006187580298f,
               0.000010503914271f,
               0.000014206928581f,
               0.000004849078300f,
              -0.000007216527695f,
              -0.000009556309846f,
              -0.000002402288023f,
               0.000004837555802f,
               0.000006034501342f,
               0.000001674721859f,
              -0.000003353501538f,
              -0.000004217789186f,
              -0.000000982515602f,
               0.000002383148395f,
               0.000002879408033f,
               0.000000698082276f,
              -0.000001723223554f,
              -0.000002096568870f,
              -0.000000449585560f,
               0.000001278766757f,
               0.000001509740857f,
               0.000000000000000f
                };

                float[] ilp = Matrice.Flip(lp);
                float[] ihp = Matrice.Flip(hp);
                return new WaveletPack(lp, hp, ilp, ihp);
            }
        }
        #endregion
    }
}
